spring:
application:
name: backend
security:
oauth2:
client:
registration:
google:
client-id: ${GOOGLE_CLIENT_ID}
client-secret: ${GOOGLE_CLIENT_SECRET}
scope:
- profile
- email
redirect-uri: "${app.base-url}/login/oauth2/code/google"
authorization-grant-type: authorization_code
client-name: Google
github:
client-id: ${GITHUB_CLIENT_ID}
client-secret: ${GITHUB_CLIENT_SECRET}
scope:
- user:email
redirect-uri: "${app.base-url}/login/oauth2/code/github"
authorization-grant-type: authorization_code
client-name: GitHub
datasource:
url: jdbc:mysql://${app.database.host}:${app.database.port}/${app.database.name}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=FALSE
driver-class-name: com.mysql.cj.jdbc.Driver
username: ${DB_USERNAME}
password: ${DB_PASSWORD}
jpa:
hibernate:
ddl-auto: update
database-platform: org.hibernate.dialect.MySQLDialect
properties:
hibernate:
jdbc:
time_zone: UTC
mail:
host: localhost
port: 1025
username: ${MAIL_USERNAME}
password: ${MAIL_PASSWORD}
properties:
mail:
smtp:
auth: true
starttls:
enable: true

app:
application-name: starter-kit
base-url: http://localhost:8080
allowed-origins: http://localhost:3000
login-page-url: ${app.base-url}/auth/login
login-success-url: ${app.base-url}/auth/login-success

database:
name: starter-kit-db
username: ${DB_USERNAME}
password: ${DB_PASSWORD}
host: localhost
port: 3306

s3:
bucket-name: store-aws-photos
access-key: ${AWS_KEY}
secret-key: ${AWS_SECRET}
region: us-east-2
base-url: https://s3.us-east-2.amazonaws.com
storage-class: STANDARD

server:
port: 8081

org:
jobrunr:
background-job-server:
enabled: true
dashboard:
enabled: true

logging:
level:
org:
springframework:
security: INFO
# Uncomment these for debugging:
# web: DEBUG
# hibernate:
#   SQL: DEBUG
